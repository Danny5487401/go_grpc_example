// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: 11_protoc_gogofast/proto/search.proto

package search

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SearchRequestParam_Type int32

const (
	SearchRequestParam_PC     SearchRequestParam_Type = 0
	SearchRequestParam_Mobile SearchRequestParam_Type = 1
)

var SearchRequestParam_Type_name = map[int32]string{
	0: "PC",
	1: "Mobile",
}

var SearchRequestParam_Type_value = map[string]int32{
	"PC":     0,
	"Mobile": 1,
}

func (x SearchRequestParam_Type) String() string {
	return proto.EnumName(SearchRequestParam_Type_name, int32(x))
}

func (SearchRequestParam_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f536977e616f97b5, []int{0, 0}
}

type SearchRequestParam struct {
	QueryText            string                  `protobuf:"bytes,1,opt,name=query_text,json=queryText,proto3" json:"query_text,omitempty"`
	Limit                int32                   `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Type                 SearchRequestParam_Type `protobuf:"varint,4,opt,name=type,proto3,enum=SearchRequestParam_Type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SearchRequestParam) Reset()         { *m = SearchRequestParam{} }
func (m *SearchRequestParam) String() string { return proto.CompactTextString(m) }
func (*SearchRequestParam) ProtoMessage()    {}
func (*SearchRequestParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_f536977e616f97b5, []int{0}
}
func (m *SearchRequestParam) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SearchRequestParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SearchRequestParam.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SearchRequestParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequestParam.Merge(m, src)
}
func (m *SearchRequestParam) XXX_Size() int {
	return m.Size()
}
func (m *SearchRequestParam) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequestParam.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequestParam proto.InternalMessageInfo

func (m *SearchRequestParam) GetQueryText() string {
	if m != nil {
		return m.QueryText
	}
	return ""
}

func (m *SearchRequestParam) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SearchRequestParam) GetType() SearchRequestParam_Type {
	if m != nil {
		return m.Type
	}
	return SearchRequestParam_PC
}

type SearchResultPage struct {
	Result               []string `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	NumResults           int32    `protobuf:"varint,2,opt,name=num_results,json=numResults,proto3" json:"num_results,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchResultPage) Reset()         { *m = SearchResultPage{} }
func (m *SearchResultPage) String() string { return proto.CompactTextString(m) }
func (*SearchResultPage) ProtoMessage()    {}
func (*SearchResultPage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f536977e616f97b5, []int{1}
}
func (m *SearchResultPage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SearchResultPage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SearchResultPage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SearchResultPage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResultPage.Merge(m, src)
}
func (m *SearchResultPage) XXX_Size() int {
	return m.Size()
}
func (m *SearchResultPage) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResultPage.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResultPage proto.InternalMessageInfo

func (m *SearchResultPage) GetResult() []string {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *SearchResultPage) GetNumResults() int32 {
	if m != nil {
		return m.NumResults
	}
	return 0
}

func init() {
	proto.RegisterEnum("SearchRequestParam_Type", SearchRequestParam_Type_name, SearchRequestParam_Type_value)
	proto.RegisterType((*SearchRequestParam)(nil), "SearchRequestParam")
	proto.RegisterType((*SearchResultPage)(nil), "SearchResultPage")
}

func init() {
	proto.RegisterFile("11_protoc_gogofast/proto/search.proto", fileDescriptor_f536977e616f97b5)
}

var fileDescriptor_f536977e616f97b5 = []byte{
	// 257 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0xd0, 0xcd, 0x4a, 0xc3, 0x40,
	0x14, 0x05, 0xe0, 0xde, 0x36, 0x0d, 0xe4, 0x0a, 0x12, 0x06, 0x91, 0x41, 0x30, 0x0d, 0x01, 0x21,
	0x0b, 0x49, 0x89, 0x2e, 0xdd, 0xe9, 0x52, 0x84, 0x10, 0xbb, 0x72, 0x13, 0xd2, 0x72, 0x8d, 0x81,
	0xa4, 0x93, 0xce, 0x0f, 0x34, 0xcf, 0xe1, 0xc6, 0x47, 0x72, 0xe9, 0x23, 0x48, 0x7c, 0x11, 0x71,
	0xa2, 0x2b, 0xe9, 0xf2, 0x3b, 0xcc, 0x19, 0x2e, 0x07, 0x2f, 0xd2, 0xb4, 0xe8, 0xa4, 0xd0, 0x62,
	0x53, 0x54, 0xa2, 0x12, 0xcf, 0xa5, 0xd2, 0x4b, 0xeb, 0xa5, 0xa2, 0x52, 0x6e, 0x5e, 0x12, 0x8b,
	0xe8, 0x15, 0x90, 0x3d, 0xda, 0x20, 0xa7, 0x9d, 0x21, 0xa5, 0xb3, 0x52, 0x96, 0x2d, 0x3b, 0x47,
	0xdc, 0x19, 0x92, 0x7d, 0xa1, 0x69, 0xaf, 0x39, 0x84, 0x10, 0x7b, 0xb9, 0x67, 0x93, 0x15, 0xed,
	0x35, 0x3b, 0xc1, 0x79, 0x53, 0xb7, 0xb5, 0xe6, 0xb3, 0x10, 0xe2, 0x79, 0x3e, 0x82, 0x5d, 0xa2,
	0xa3, 0xfb, 0x8e, 0xb8, 0x13, 0x42, 0x7c, 0x7c, 0xc5, 0x93, 0xff, 0xff, 0x26, 0xab, 0xbe, 0xa3,
	0xdc, 0xbe, 0x8a, 0xce, 0xd0, 0xf9, 0x11, 0x73, 0x71, 0x9a, 0xdd, 0xf9, 0x13, 0x86, 0xe8, 0x3e,
	0x88, 0x75, 0xdd, 0x90, 0x0f, 0xd1, 0x3d, 0xfa, 0x7f, 0x65, 0x65, 0x1a, 0x9d, 0x95, 0x15, 0xb1,
	0x53, 0x74, 0xa5, 0x15, 0x87, 0x70, 0x16, 0x7b, 0xf9, 0xaf, 0xd8, 0x02, 0x8f, 0xb6, 0xa6, 0x2d,
	0x46, 0x29, 0x3e, 0xb5, 0x17, 0xe1, 0xd6, 0xb4, 0x63, 0x57, 0xdd, 0xa6, 0xef, 0x43, 0x00, 0x1f,
	0x43, 0x00, 0x9f, 0x43, 0x00, 0x6f, 0x5f, 0xc1, 0xe4, 0x69, 0x71, 0x68, 0x9b, 0x9b, 0x71, 0x9b,
	0xb5, 0x6b, 0x75, 0xfd, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x9b, 0xb7, 0x8d, 0x31, 0x45, 0x01, 0x00,
	0x00,
}

func (m *SearchRequestParam) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SearchRequestParam) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SearchRequestParam) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Type != 0 {
		i = encodeVarintSearch(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x20
	}
	if m.Limit != 0 {
		i = encodeVarintSearch(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x18
	}
	if len(m.QueryText) > 0 {
		i -= len(m.QueryText)
		copy(dAtA[i:], m.QueryText)
		i = encodeVarintSearch(dAtA, i, uint64(len(m.QueryText)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SearchResultPage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SearchResultPage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SearchResultPage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.NumResults != 0 {
		i = encodeVarintSearch(dAtA, i, uint64(m.NumResults))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Result) > 0 {
		for iNdEx := len(m.Result) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Result[iNdEx])
			copy(dAtA[i:], m.Result[iNdEx])
			i = encodeVarintSearch(dAtA, i, uint64(len(m.Result[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintSearch(dAtA []byte, offset int, v uint64) int {
	offset -= sovSearch(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SearchRequestParam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.QueryText)
	if l > 0 {
		n += 1 + l + sovSearch(uint64(l))
	}
	if m.Limit != 0 {
		n += 1 + sovSearch(uint64(m.Limit))
	}
	if m.Type != 0 {
		n += 1 + sovSearch(uint64(m.Type))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SearchResultPage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Result) > 0 {
		for _, s := range m.Result {
			l = len(s)
			n += 1 + l + sovSearch(uint64(l))
		}
	}
	if m.NumResults != 0 {
		n += 1 + sovSearch(uint64(m.NumResults))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovSearch(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSearch(x uint64) (n int) {
	return sovSearch(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SearchRequestParam) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSearch
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SearchRequestParam: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SearchRequestParam: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSearch
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSearch
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.QueryText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= SearchRequestParam_Type(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSearch(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSearch
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SearchResultPage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSearch
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SearchResultPage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SearchResultPage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSearch
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSearch
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Result = append(m.Result, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NumResults", wireType)
			}
			m.NumResults = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NumResults |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSearch(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSearch
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSearch(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSearch
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSearch
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSearch
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSearch
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSearch
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSearch
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSearch        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSearch          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSearch = fmt.Errorf("proto: unexpected end of group")
)
