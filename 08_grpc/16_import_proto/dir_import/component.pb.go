// Code generated by protoc-gen-go. DO NOT EDIT.
// source: 16_import_proto/dir_import/component.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CPU struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Frequency            int64    `protobuf:"varint,2,opt,name=Frequency,proto3" json:"Frequency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CPU) Reset()         { *m = CPU{} }
func (m *CPU) String() string { return proto.CompactTextString(m) }
func (*CPU) ProtoMessage()    {}
func (*CPU) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4d02437899346d9, []int{0}
}

func (m *CPU) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPU.Unmarshal(m, b)
}
func (m *CPU) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPU.Marshal(b, m, deterministic)
}
func (m *CPU) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPU.Merge(m, src)
}
func (m *CPU) XXX_Size() int {
	return xxx_messageInfo_CPU.Size(m)
}
func (m *CPU) XXX_DiscardUnknown() {
	xxx_messageInfo_CPU.DiscardUnknown(m)
}

var xxx_messageInfo_CPU proto.InternalMessageInfo

func (m *CPU) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CPU) GetFrequency() int64 {
	if m != nil {
		return m.Frequency
	}
	return 0
}

type Memory struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Cap                  int64    `protobuf:"varint,2,opt,name=Cap,proto3" json:"Cap,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Memory) Reset()         { *m = Memory{} }
func (m *Memory) String() string { return proto.CompactTextString(m) }
func (*Memory) ProtoMessage()    {}
func (*Memory) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4d02437899346d9, []int{1}
}

func (m *Memory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Memory.Unmarshal(m, b)
}
func (m *Memory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Memory.Marshal(b, m, deterministic)
}
func (m *Memory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Memory.Merge(m, src)
}
func (m *Memory) XXX_Size() int {
	return xxx_messageInfo_Memory.Size(m)
}
func (m *Memory) XXX_DiscardUnknown() {
	xxx_messageInfo_Memory.DiscardUnknown(m)
}

var xxx_messageInfo_Memory proto.InternalMessageInfo

func (m *Memory) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Memory) GetCap() int64 {
	if m != nil {
		return m.Cap
	}
	return 0
}

func init() {
	proto.RegisterType((*CPU)(nil), "import.CPU")
	proto.RegisterType((*Memory)(nil), "import.Memory")
}

func init() {
	proto.RegisterFile("16_import_proto/dir_import/component.proto", fileDescriptor_f4d02437899346d9)
}

var fileDescriptor_f4d02437899346d9 = []byte{
	// 145 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x32, 0x34, 0x8b, 0xcf,
	0xcc, 0x2d, 0xc8, 0x2f, 0x2a, 0x89, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x4f, 0xc9, 0x2c, 0x82,
	0x0a, 0xe8, 0x27, 0xe7, 0xe7, 0x16, 0xe4, 0xe7, 0xa5, 0xe6, 0x95, 0xe8, 0x81, 0xa5, 0x84, 0xd8,
	0x20, 0xe2, 0x4a, 0xe6, 0x5c, 0xcc, 0xce, 0x01, 0xa1, 0x42, 0x42, 0x5c, 0x2c, 0x7e, 0x89, 0xb9,
	0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0xb6, 0x90, 0x0c, 0x17, 0xa7, 0x5b, 0x51,
	0x6a, 0x61, 0x69, 0x6a, 0x5e, 0x72, 0xa5, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x73, 0x10, 0x42, 0x40,
	0x49, 0x8f, 0x8b, 0xcd, 0x37, 0x35, 0x37, 0xbf, 0xa8, 0x12, 0xab, 0x5e, 0x01, 0x2e, 0x66, 0xe7,
	0xc4, 0x02, 0xa8, 0x2e, 0x10, 0xd3, 0x49, 0x29, 0x4a, 0x01, 0xb7, 0xf3, 0xac, 0xc1, 0x02, 0x49,
	0x6c, 0x60, 0xca, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xfc, 0xf1, 0xe8, 0x31, 0xc9, 0x00, 0x00,
	0x00,
}
